// Generated by view binder compiler. Do not edit!
package com.example.timeman.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.timeman.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMain2Binding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button button2;

  @NonNull
  public final Button button4;

  @NonNull
  public final MaterialButton resetButton;

  @NonNull
  public final MaterialButton startStopButton;

  @NonNull
  public final TextView timeTV;

  private ActivityMain2Binding(@NonNull LinearLayout rootView, @NonNull Button button2,
      @NonNull Button button4, @NonNull MaterialButton resetButton,
      @NonNull MaterialButton startStopButton, @NonNull TextView timeTV) {
    this.rootView = rootView;
    this.button2 = button2;
    this.button4 = button4;
    this.resetButton = resetButton;
    this.startStopButton = startStopButton;
    this.timeTV = timeTV;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMain2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMain2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMain2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button2;
      Button button2 = ViewBindings.findChildViewById(rootView, id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.button4;
      Button button4 = ViewBindings.findChildViewById(rootView, id);
      if (button4 == null) {
        break missingId;
      }

      id = R.id.resetButton;
      MaterialButton resetButton = ViewBindings.findChildViewById(rootView, id);
      if (resetButton == null) {
        break missingId;
      }

      id = R.id.startStopButton;
      MaterialButton startStopButton = ViewBindings.findChildViewById(rootView, id);
      if (startStopButton == null) {
        break missingId;
      }

      id = R.id.timeTV;
      TextView timeTV = ViewBindings.findChildViewById(rootView, id);
      if (timeTV == null) {
        break missingId;
      }

      return new ActivityMain2Binding((LinearLayout) rootView, button2, button4, resetButton,
          startStopButton, timeTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
